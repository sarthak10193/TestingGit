git is a distributed version control and file managment system
1. create a new project folder. say mkdir /home/sarthak/projects/NLPpythonProject
2. cd /home/sarthak/projects/NLPpythonProject
3. git init  																													## initialized the git repo.  Now git is functionable on this folder
4. git config --global user.name "sarthakarora.93" ; git config --global user.email "sarthak10193@gmail.com"
5. git status  ; git status -s  (status in shorthand)




		sarthak@sarora:~/Mydata/Studies/gitTutorial$ git status
		On branch master       																									## currently on MASTER BRANCH

		Initial commit

		Untracked files:       																									## means these files are currently not being tracked by GIT. So can't really tell who modified, what, where,  when etc.
		  (use "git add <file>..." to include in what will be committed)

			git doct
			gitTest.txt

		nothing added to commit but untracked files present (use "git add" to track)



$ git add gitTest.txt
$ git status



		On branch master

		Initial commit

		Changes to be committed:
		  (use "git rm --cached <file>..." to unstage)

			new file:   gitTest.txt         					 																## new file put into the staging area

		Untracked files:       								 																	## this file is still untracked
		  (use "git add <file>..." to include in what will be committed)

			git doct



$ git commit -m "commmiting gitTest"
> edit gitTest.txt  

$ git status



		On branch master
		Changes not staged for commit:
		  (use "git add <file>..." to update what will be committed)
		  (use "git checkout -- <file>..." to discard changes in working directory)

			modified:   gitTest.txt	                              																## now it shows "changes not staged for commit and it shows the file is MODIFIED" 																			
		 
		Untracked files:
		  (use "git add <file>..." to include in what will be committed)

			git doct

		no changes added to commit (use "git add" and/or "git commit -a")
		sarthak@sarora:~/Mydata/Studies/gitTutorial$ git status -s
		 M gitTest.txt
		?? git doct




$ git diff 																														##to check what changes have occured do [this tells you the difference btw current local file and file in the repo]


		sarthak@sarora:~/Mydata/Studies/gitTutorial$ git diff
		diff --git a/gitTest.txt b/gitTest.txt
		index f6edd6e..c8924b6 100644
		--- a/gitTest.txt
		+++ b/gitTest.txt
		@@ -1 +1 @@
		-git test
		+Hello git test



$ git diff --cached    																											## works when you have already added the git file to the staging area and git diff would should no differnce




		sarthak@sarora:~/Mydata/Studies/gitTutorial$ git diff
		sarthak@sarora:~/Mydata/Studies/gitTutorial$ git diff --cached
		diff --git a/gitTest.txt b/gitTest.txt
		index c8924b6..cfb74e9 100644
		--- a/gitTest.txt
		+++ b/gitTest.txt
		@@ -1 +1,2 @@
		 Hello git test
		+hello git again
		\ No newline at end of file
		sarthak@sarora:~/Mydata/Studies/gitTutorial$ 



$ git log                             																							## gives the log list of commits done
$ git log --oneline 																											## a succint version of the logs with fewer details as compared to git log




======================================================================================================= PART 2 ====================================================================================================================================

Until now we have been moving code from local working dir ==> staging area ==> local repository 
To push this code to a remote Git Repo, we simply need to add ssh keys and then push code.

use ssh-keygen -t rsa -C "sarthak10193@gmail.com"   # -t what type of key  ;  -C enter some comment
take the public key from cd ~/.ssh/rsa_key.pub and paste it on github ssh area


# now just ssh to git server
ssh -T git@github.com


		ssh -T git@github.com
		Warning: Permanently added the RSA host key for IP address '192.30.255.112' to the list of known hosts.
		Hi sarthak10193! You've successfully authenticated, but GitHub does not provide shell access.
		sarthak@sarora:~/Mydata/Studies/gitTutorial$ ssh -T git@github.com



# tells git to add a remote repo and not a local repo instead. tell where that origin is ie "git@github.com:sarthak10193/TestingGit.git" and at this point my local git knows where origin is an has authentication via ssh
$ git remote add orign git@github.com:sarthak10193/TestingGit.git     														

$ git push orign master    																										## push/upload code to orign repo , the only branch we currently have is master.


  

============================================================================================== 		PART 3		================================================================================================================================
https://www.youtube.com/watch?v=STJBFXskfCc&index=3&list=PL1F56EA413018EEE1


$ git branch 																													## gives a list of all branches

